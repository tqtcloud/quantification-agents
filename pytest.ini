[tool:pytest]
# pytest 配置文件

# 测试发现
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 测试目录
testpaths = tests

# 最小版本要求
minversion = 7.0

# 添加选项
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --durations-min=1.0
    --disable-warnings
    --color=yes
    --junit-xml=logs/pytest_results.xml
    --json-report
    --json-report-file=logs/pytest_report.json
    --html=logs/pytest_report.html
    --self-contained-html
    --cov=src/strategy
    --cov-report=term-missing
    --cov-report=html:logs/coverage_html
    --cov-report=xml:logs/coverage.xml
    --cov-branch
    --cov-fail-under=85

# 标记定义
markers =
    # 测试类型标记
    unit: 单元测试
    integration: 集成测试
    performance: 性能测试
    reliability: 可靠性测试
    benchmark: 基准测试
    
    # 执行特性标记
    slow: 慢速测试（执行时间较长）
    fast: 快速测试（适用于CI）
    async: 异步测试
    
    # 组件标记
    strategy_manager: 策略管理器相关测试
    signal_aggregator: 信号聚合器相关测试
    resource_allocator: 资源分配器相关测试
    conflict_resolver: 冲突解决器相关测试
    priority_manager: 优先级管理器相关测试
    strategy_monitor: 策略监控器相关测试
    
    # 场景标记
    failure_injection: 故障注入测试
    edge_case: 边界条件测试
    stress: 压力测试
    memory_test: 内存相关测试
    concurrent: 并发测试
    
    # 环境标记
    ci: CI环境测试
    local: 本地环境测试
    production: 生产环境测试

# 过滤警告
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    # 忽略特定库的警告
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::asyncio.coroutines.CoroutineNeverAwaitedWarning
    # 只显示项目相关的警告
    default::UserWarning:src.*
    default::DeprecationWarning:src.*

# 异步测试配置
asyncio_mode = auto

# 测试发现模式
collect_ignore = [
    "setup.py",
    "docs",
    "examples",
    "scripts",
    ".venv",
    "venv",
    "build",
    "dist"
]

# 日志配置
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 性能相关配置
# 设置测试超时（秒）
timeout = 300

# JUnit XML配置
junit_suite_name = strategy_management_tests
junit_logging = system-out
junit_log_passing_tests = true
junit_family = xunit2

# HTML报告配置
html_theme = default
html_table = pytest_html.extras.html

# JSON报告配置  
json_report_summary = true