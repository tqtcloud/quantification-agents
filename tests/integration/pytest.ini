[tool:pytest]
# pytest配置文件，专门用于集成测试

# 测试目录
testpaths = tests/integration

# 最小版本要求
minversion = 7.0

# Python文件模式
python_files = test_*.py *_test.py

# Python类模式
python_classes = Test*

# Python函数模式
python_functions = test_*

# 添加选项
addopts = 
    # 详细输出
    -v
    # 显示详细的失败信息
    --tb=short
    # 显示最慢的10个测试
    --durations=10
    # 显示测试覆盖率
    --cov=src
    --cov-report=term-missing
    --cov-report=html:test_reports/htmlcov
    --cov-report=xml:test_reports/coverage.xml
    # 并行执行测试（需要pytest-xdist）
    # -n auto
    # 失败时立即停止
    # -x
    # 显示本地变量
    -l
    # 禁用warnings
    --disable-warnings
    # 异步模式
    --asyncio-mode=auto
    # 超时设置（秒）
    --timeout=300
    # 超时方法
    --timeout-method=thread
    # 严格配置
    --strict-config
    --strict-markers

# 标记注册
markers =
    slow: 标记为慢速测试，可以用 -m "not slow" 跳过
    fast: 标记为快速测试
    integration: 集成测试
    unit: 单元测试
    api: API相关测试
    websocket: WebSocket相关测试
    e2e: 端到端测试
    performance: 性能测试
    security: 安全测试
    load: 负载测试
    smoke: 冒烟测试
    regression: 回归测试
    critical: 关键测试
    optional: 可选测试
    flaky: 可能不稳定的测试
    network: 需要网络访问的测试
    database: 需要数据库的测试
    auth: 认证相关测试
    rate_limit: 速率限制测试
    admin: 需要管理员权限的测试
    concurrent: 并发测试
    
# 测试发现规则
# 收集测试时的行为
collect_ignore = [
    "setup.py",
    "conftest.py"
]

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 文件日志
log_file = logs/integration_tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(name)s: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# 控制台输出
console_output_style = progress

# junit XML报告
junit_suite_name = integration_tests
junit_logging = all
junit_log_passing_tests = true

# 过滤warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:websockets.*
    ignore::UserWarning:httpx.*
    ignore::ResourceWarning
    # 忽略asyncio相关的警告
    ignore:.*coroutine.*:RuntimeWarning
    ignore:.*Event loop is closed.*:RuntimeWarning
    
# 设置环境变量
env = 
    TESTING = 1
    PYTHONPATH = src
    LOG_LEVEL = INFO
    ASYNC_TEST_TIMEOUT = 30
    
# asyncio配置
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# 覆盖率配置
[coverage:run]
# 包含的源码路径
source = src

# 排除的文件
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.venv/*
    */build/*
    */dist/*
    setup.py
    conftest.py

# 分支覆盖
branch = True

# 并行模式
parallel = True

[coverage:report]
# 显示缺失的行
show_missing = True

# 跳过覆盖率为100%的文件
skip_covered = False

# 跳过空文件
skip_empty = True

# 精确到小数点后1位
precision = 1

# 排序方式
sort = Cover

# 失败阈值
fail_under = 80

[coverage:html]
# HTML报告目录
directory = test_reports/htmlcov

# 标题
title = REST API & WebSocket Integration Tests Coverage

[coverage:xml]
# XML报告文件
output = test_reports/coverage.xml