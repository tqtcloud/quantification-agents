[tool.poetry]
name = "crypto-quant-trading"
version = "0.1.0"
description = "Lightweight cryptocurrency quantitative trading system with multi-agent architecture"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
aiohttp = "^3.9.0"
asyncio = "^3.4.3"
pandas = "^2.1.3"
numpy = "^1.26.0"
sqlalchemy = "^2.0.23"
alembic = "^1.12.1"
duckdb = "^0.9.2"
pyzmq = "^25.1.1"
langchain = "^0.0.350"
langgraph = "^0.0.20"
python-binance = "^1.0.19"
# ta-lib = "^0.4.28"  # 使用内置mock版本
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
python-dotenv = "^1.0.0"
structlog = "^23.2.0"
tenacity = "^8.2.3"
httpx = "^0.25.2"
websockets = "^12.0"
uvloop = {version = "^0.19.0", markers = "sys_platform != 'win32'"}
orjson = "^3.9.10"
pydantic-extra-types = "^2.2.0"
backtrader = "^1.9.78.123"
plotly = "^5.18.0"
streamlit = "^1.29.0"
msgpack = "^1.0.7"
scipy = "^1.11.4"
cvxpy = "^1.4.1"

[tool.poetry.group.dev.dependencies]
black = "^23.12.0"
ruff = "^0.1.8"
mypy = "^1.7.1"
pytest-cov = "^4.1.0"
ipython = "^8.18.1"
jupyterlab = "^4.0.9"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []
exclude = [
    ".git",
    "__pycache__",
    "docs",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"